{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","shuffleFriend","id","Wrapper","children","Title","App","state","friends","topscore","score","restart","_this","setState","forEach","friend","clicked","alert","find","i","sort","Math","random","_this2","this","components_Wrapper","components_Title","map","components_FriendCard","key","occupation","location","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mtFAgBeA,MAbf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,QAAMM,QAAS,kBAAMT,EAAMU,cAAcV,EAAMW,KAAKP,UAAU,WAA9D,wBCFSQ,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,kBCoEvBE,6MAhEbC,MAAQ,CACNC,UACAC,SAAU,EACVC,MAAO,KAUTC,QAAU,WACR,GAAIC,EAAKL,MAAMG,MAAQE,EAAKL,MAAME,SAOhC,OANAG,EAAKC,SAAS,CAAEJ,SAAUG,EAAKL,MAAMG,QACrCE,EAAKL,MAAMC,QAAQM,QAAQ,SAAAC,GACzBA,EAAOC,SAAU,IAEnBC,MAAM,iCACNL,EAAKC,SAAS,CAAEH,MAAO,KAChB,KAIXT,cAAgB,SAAAC,GACdU,EAAKL,MAAMC,QAAQU,KAAK,SAACF,EAASG,GAChC,GAAIH,EAAQd,KAAOA,EAAI,CACrB,IAA2B,IAAvBM,EAAQW,GAAGH,QAKb,OAHAR,EAAQW,GAAGH,SAAU,EACrBJ,EAAKC,SAAS,CAAEL,UAASE,MAAOE,EAAKL,MAAMG,MAAQ,IACnDF,EAAQY,KAAK,kBAAMC,KAAKC,SAAW,MAC5B,EAEPV,EAAKD,sFASJ,IAAAY,EAAAC,KACP,OACEhC,EAAAC,EAAAC,cAAC+B,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAD,eAAeF,KAAKjB,MAAMG,MAA1B,eAA6Cc,KAAKjB,MAAME,SAAxD,KACCe,KAAKjB,MAAMC,QAAQmB,IAAI,SAAAZ,GAAM,OAC5BvB,EAAAC,EAAAC,cAACkC,EAAD,CACE3B,cAAesB,EAAKtB,cACpBC,GAAIa,EAAOb,GACX2B,IAAKd,EAAOb,GACZL,KAAMkB,EAAOlB,KACbE,MAAOgB,EAAOhB,MACd+B,WAAYf,EAAOe,WACnBC,SAAUhB,EAAOgB,qBA1DXC,mBCDlBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f093e079.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <span onClick={() => props.shuffleFriend(props.id)} className=\"shuffle\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    topscore: 0,\n    score: 0\n  };\n\n  // win = () => {\n  //   if (this.state.score === 12){\n  //     alert(\"WELL DONE!\");\n  //     this.restart();\n  //   }\n  // }\n\n  restart = () => {\n    if (this.state.score > this.state.topscore) {\n      this.setState({ topscore: this.state.score });\n      this.state.friends.forEach(friend => {\n        friend.clicked = false;\n      });\n      alert(\"You Lose This Time Spiderman!\");\n      this.setState({ score: 0 });\n      return true;\n    }\n  }\n\n  shuffleFriend = id => {\n    this.state.friends.find((clicked, i) => {\n      if (clicked.id === id) {\n        if (friends[i].clicked === false) {\n          //this code iterates through all the friend objects\n          friends[i].clicked = true;\n          this.setState({ friends, score: this.state.score + 1 });\n          friends.sort(() => Math.random() - 0.5);\n          return true;\n        } else {\n          this.restart();\n        }\n      }\n    })\n  }\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Score: {this.state.score} Top Score: {this.state.topscore} </Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            shuffleFriend={this.shuffleFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}